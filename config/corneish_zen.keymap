/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        CPY_PST: CPY_PST {
            compatible = "zmk,behavior-tap-dance";
            label = "CPY_PST";
            #binding-cells = <0>;
            bindings =
                <&kp LG(C)>,
                <&kp LG(P)>;

            tapping-term-ms = <125>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <25 34>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <4 7>;
        };

        underscore {
            bindings = <&kp LS(MINUS)>;
            key-positions = <28 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "BASE";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt DELETE LS(LC(LG(LEFT_ALT)))  &kp Q  &kp W      &kp F               &kp P        &kp B      &kp J    &kp L      &kp U    &kp Y  &kp SEMI   &CPY_PST
                        &kp ESC  &kp A  &kp R      &kp S               &kp T        &kp G      &kp M    &kp N      &kp E    &kp I     &kp O   &kp BSPC
                      &kp PG_UP  &kp Z  &kp X      &kp C               &kp D        &kp V      &kp K    &kp H  &kp COMMA  &kp DOT  &kp FSLH  &kp PG_DN
                                               &lt 2 TAB  &lt 3 SINGLE_QUOTE  &lt 1 SPACE    &kp RET  &kp DQT  &kp GRAVE
            >;
        };

        nav {
            label = "NAV";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp LBKT   &kp RBKT   &kp LPAR   &kp RPAR              &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans    &kp CAPSLOCK  &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &kp NON_US_BACKSLASH
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp HOME  &kp PG_DN  &kp PG_UP    &kp END             &kp TILDE
                        &trans  &trans  &trans          &trans    &trans     &trans
            >;
        };

        system {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans           &trans        &trans   &bootloader
&trans  &trans  &trans  &trans  &trans  &trans        &trans    &kp C_PREV  &kp C_VOL_DN  &kp C_VOLUME_UP    &kp C_NEXT        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                        &trans  &trans  &trans    &kp C_PLAY        &trans    &kp C_MUTE
            >;

            label = "SYS";
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp SLASH  &kp N7  &kp N8  &kp N9  &trans                &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp EQUAL  &kp N4  &kp N5  &kp N6  &trans  &kp NON_US_BACKSLASH
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp N1  &kp N2  &kp N3  &trans             &kp TILDE
                        &trans  &trans  &trans       &trans  &trans  &kp N0
            >;

            label = "NUM";
        };
    };
};
